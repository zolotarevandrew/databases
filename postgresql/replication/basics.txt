https://www.postgresql.org/docs/current/high-availability.html

1) Shared Disk Failover
- uses a single disk array that is shared by multiple servers;
If the main database server fails, the standby server is able to mount and start the database as though it were recovering from a database crash. 
This allows rapid failover with no data loss.

single point of failure - disks can be damaged etc;

2) File System (Block Device) Replication

All changes to a file system are mirrored to a file system residing on another computer. 
Writes to the standby must be done in the same order as those on the primary. 
DRBD is a popular file system replication solution for Linux.

servers must be identical (os etc).

3) Write-Ahead Log Shipping

Warm and hot standby servers can be kept current by reading a stream of write-ahead log (WAL) records.
If the main server fails, the standby contains almost all of the data of the main server, and can be quickly made the new primary database server. 
This can be synchronous or asynchronous and can only be done for the entire database server.

A standby server can be implemented using file-based log shipping or streaming replication.

4) Logical Replication

Logical replication allows a database server to send a stream of data modifications to another server. 
PostgreSQL logical replication constructs a stream of logical data modifications from the WAL. 
Logical replication allows replication of data changes on a per-table basis.

5) Trigger-Based Primary-Standby Replication
 
Operating on a per-table basis, the primary server sends data changes (typically) asynchronously to the standby servers. 
Standby servers can answer queries while the primary is running, and may allow some local data changes or write activity. 
This form of replication is often used for offloading large analytical or data warehouse queries.

6) SQL-Based Replication Middleware

With SQL-based replication middleware, a program intercepts every SQL query and sends it to one or all servers. 
Each server operates independently. 
Read-write queries must be sent to all servers, so that every server receives any changes. 
But read-only queries can be sent to just one server, allowing the read workload to be distributed among them.

7) Asynchronous Multimaster Replication

Using asynchronous multimaster replication, each server works independently, and periodically communicates with the other servers to identify conflicting transactions. 
The conflicts can be resolved by users or conflict resolution rules.
